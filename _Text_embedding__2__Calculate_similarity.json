{
  "name": "(Text embedding) 2. Calculate similarity",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -340,
        40
      ],
      "id": "d14772f6-c0f8-4d1b-bfef-9d2720fa7c75",
      "name": "When clicking 'Test workflow'"
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "http://localhost:11434/api/embed",
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={\n    \"model\": \"chevalblanc/acge_text_embedding:latest\",\n    \"input\": [\"{{ $json.text1 }}\", \"{{ $json.text2 }}\", \"{{ $json.text3 }}\"]\n}\n"
      },
      "name": "Call Ollama Embedding API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        260,
        100
      ],
      "id": "5018a48f-62d7-40c5-b456-6425ac88fffa"
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "import numpy as np\nfrom itertools import combinations\n\n# 取得 API 回傳的 embedding 向量\nembeddings = items[0][\"json\"][\"embeddings\"]\n\nvectors = []\n# 轉成純 Python list\nfor idx in range(len(embeddings)):\n    vec = list(embeddings[idx])  \n    vectors.append(vec)\n\n# 定義 cosine similarity\ndef cosine_similarity(vec1, vec2):\n    vec1 = np.array(vec1)\n    vec2 = np.array(vec2)\n    return float(np.dot(vec1, vec2) / (np.linalg.norm(vec1) * np.linalg.norm(vec2)))\n\n# 計算每一對向量的相似度\nresults = []\nfor (i1, v1), (i2, v2) in combinations(enumerate(vectors), 2):\n    sim = cosine_similarity(v1, v2)\n    results.append({\n        \"pair\": f\"{i1}-{i2}\",\n        \"similarity\": sim\n    })\n\n# 輸出結果\nreturn results"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        500,
        100
      ],
      "id": "c6f19dc9-f0a9-424c-a889-c6acab08c389",
      "name": "計算 text 與 prompt 相似度"
    },
    {
      "parameters": {
        "content": "### 輸入 3 段文本, 用 embedding vector計算文本的相似度",
        "height": 80,
        "width": 340
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -260,
        -100
      ],
      "typeVersion": 1,
      "id": "99b0a2f2-7b1c-47e8-b034-8047c7ade85b",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "import numpy as np\nfrom itertools import combinations\n\n# 取得 API 回傳的 embedding 向量\nembeddings = items[0][\"json\"][\"data\"]\nvectors = []\n\n# 轉成純 Python list\nfor idx in range(len(embeddings)):\n    vec = list(embeddings[idx][\"embedding\"])  # 👈 加上 list()\n    vectors.append(vec)\n\n# 定義 cosine similarity\ndef cosine_similarity(vec1, vec2):\n    vec1 = np.array(vec1)\n    vec2 = np.array(vec2)\n    return float(np.dot(vec1, vec2) / (np.linalg.norm(vec1) * np.linalg.norm(vec2)))\n\n# 計算每一對向量的相似度\nresults = []\nfor (i1, v1), (i2, v2) in combinations(enumerate(vectors), 2):\n    sim = cosine_similarity(v1, v2)\n    results.append({\n        \"pair\": f\"{i1}-{i2}\",\n        \"similarity\": sim\n    })\n\n# 輸出結果\nreturn results"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        500,
        -100
      ],
      "id": "87a253fb-8c0c-494d-9bb1-832dbbbf9192",
      "name": "計算 text 與 prompt 相似度1"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "text1",
              "value": "AI 與半導體"
            },
            {
              "name": "text2",
              "value": "講師從墨西哥漁夫的故事開始，有一個富有的銀行家在墨西哥渡假，他覺得每天只釣一隻魚的人不聰明，應該釣很多去開一個罐頭產業，然後開始享福，但漁夫正是正在這樣的時段。過度追求成功，反而忽略真正重要的事情。遇到困難的時候，所做出的決定，現在回去看其實也沒有太大的意義了吧，因為再來一次，會選一樣的選擇，沒有好或壞，要對自己的選擇承擔就好了。做不到一件事情不應該一直為自己找理由，而是應該更努力的去挑戰他，等你成功了，獲得成就感了，那你就可以告訴大家你很努力很努力之後成功了。如果一個人很喜歡這件事情，那就會廢寢忘食的時候去努力做完，那當我們找到自己熱愛的工作之後，就好好的認真的完成。當你不喜歡這份工作的時候，就要想想要不要轉換跑道，不要邊做邊抱怨，為生活而工作轉化成為快樂而工作。"
            },
            {
              "name": "text3",
              "value": "參與了一場關於「半導體與AI發展」的專題講座，講座內容涵蓋半導體製程技術的進步、AI對半導體市場的需求變化、產業供應鏈分析，以及未來發展趨勢。講師還分享了AI運算對高效能晶片（如GPU、TPU、NPU等）的需求，以及半導體產業在全球科技競爭中的關鍵角色。此外，還參與了問答環節，與講師及其他參與者交流觀點。"
            }
          ]
        },
        "options": {}
      },
      "name": "輸入文本",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -120,
        40
      ],
      "id": "07332c09-a5a2-449c-ad5e-cd0ef7f7b929"
    },
    {
      "parameters": {
        "content": "0-1, 0.130\n0-2, 0.582\n1-2, 0.241",
        "height": 80,
        "width": 150
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        720,
        -80
      ],
      "id": "52a0c2d1-1b83-4669-8200-c2d9ad9f79de",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "0-1, 0.125\n0-2, 0.762\n1-2, 0.266",
        "height": 80,
        "width": 150
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        720,
        100
      ],
      "id": "bef6c310-eb45-4792-b20f-0a6b64197009",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/embeddings",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\":  \"text-embedding-3-small\",\n  \"input\": \"{{ $json.text }}\"\n} ",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        260,
        -100
      ],
      "id": "648e59fb-c4f1-4ca4-976c-de2cad688f75",
      "name": "Call OpenAI embeddimg model"
    }
  ],
  "pinData": {},
  "connections": {
    "When clicking 'Test workflow'": {
      "main": [
        [
          {
            "node": "輸入文本",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call Ollama Embedding API": {
      "main": [
        [
          {
            "node": "計算 text 與 prompt 相似度",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "輸入文本": {
      "main": [
        [
          {
            "node": "Call Ollama Embedding API",
            "type": "main",
            "index": 0
          },
          {
            "node": "Call OpenAI embeddimg model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call OpenAI embeddimg model": {
      "main": [
        [
          {
            "node": "計算 text 與 prompt 相似度1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "36485c57-70bb-403f-b587-778334314ff3",
  "meta": {
    "instanceId": "ed4784af1f74bbc62add1178f4aebb26503cdf990ea025c651402f03e02f9665"
  },
  "id": "pgqpjK9NUUQcHboQ",
  "tags": []
}